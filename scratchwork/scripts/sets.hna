(include "../scripts/library.hna")

var a (mset 7 7 7 7 6 9 8 7)
(println "a: " a)
(println "a contains 3? " element? a 3)
(println "a contains 5? " element? a 5)
var b (mset 3 5 6 4 7)
(println "b: " b)
(println "b contains 5? " element? b 5)
(println "b contains 7? " element? b 7)
var c union a b
(println "c = ∪ {a b}: " c)
(println "c contains 3? " element? c 3)
(println "c contains 5? " element? c 5)
(println "c contains 7? " element? c 7)
var d intersection a b
(println "d = ∩ {a b}: " d)
(println "d contains 3? " element? d 3)
(println "d contains 5? " element? d 5)
(println "d contains 7? " element? d 7)
(println "a = b? " = a b)
(println "a = c? " = a c)
(println "b = c? " = b c)
(println "a = a? " = a a)
(println "b = b? " = b b)
(println "c = c? " = c c)
(println "b = reversed b? " = b (apply #mset (reverse composite-value b)))

var e (mset 5 3 9 1 6 5 7 5 6 5)
(println "e: " e)

var f (mset 3 5 9 6 6 6 9 4 4 8)
(println "f: " f)

var g (mset a b e f)
(println "g = {a b e f}: " g)

defun ∈ (set value) element? set value
defun ∪ arguments (apply #union  composite-value arguments)
defun ∩ arguments (apply #intersection  composite-value arguments)

(println "a ∈ g: " ∈ g a)
(println "b ∈ g: " ∈ g b)
(println "c ∈ g: " ∈ g c)
(println "d ∈ g: " ∈ g d)
(println "e ∈ g: " ∈ g e)
(println "f ∈ g: " ∈ g f)

(println "∪ g: " ∪ g)
(println "∩ g: " ∩ g)
