(include "../scripts/library.dl")

(var EOF -1)

(var error-type (make-type))
(defun make-error (integer)
  (make-instance error-type integer ()))
(defun error-value (error)
  (composite-value error))

(defun get-random-uint32 ()
  (var f (open-file "/dev/random" "r"))
  (var uint32 (+ (+ (fgetc f)
                    (* 0x100 (fgetc f)))
                 (+ (* 0x10000 (fgetc f))
                    (* 0x1000000 (fgetc f)))))
  (var error (close-file f))
  ;; Monad!
  (if error
      (make-error error)
      uint32))


(var board (vector (cons 0 2) (cons 1 2) (cons 2 2)
                   (cons 0 1) (cons 1 1) (cons 2 1) (cons 3 1)
                   (cons 0 0) (cons 1 0) (cons 2 0) (cons 3 0) (cons 4 0)
                   (cons 0 -1) (cons 1 -1) (cons 2 -1) (cons 3 -1)
                   (cons 0 -2) (cons 1 -2) (cons 2 -2)))

(var first (mod (get-random-uint32) (length board)))
(var second 0)
(var found false)

(until found
       (setq second (mod (get-random-uint32) (length board)))
       (setq found (!= first second)))
(println (cons first second))
