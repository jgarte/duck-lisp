
(defun 1+ (a)
  (+ a 1))

(defun 1- (a)
  (- a 1))

(defun * (a b)
  (var acc 0)

  (var i 0)
  (while (< i b)
	(← acc (+ acc a))
	(← i (+ i 1)))
  acc)

(defun factorial-helper (n acc)
  (unless (= n 1) 
	(setq acc (factorial-helper (1- n) (* n acc))))
  acc)

(defun factorial (n)
  (factorial-helper n 1))

(var x 5)
(var y (factorial x))
(print y)
