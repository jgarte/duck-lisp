(defmacro if (condition then else)
  (list (quote __if) condition then else))
(defmacro when (condition &rest then)
  (cons (quote __when) (cons condition then)))
(defmacro unless (condition &rest else)
  (cons (quote __unless) (cons condition else)))

(defun println (m)
  (print m)
  (print "\n")
  m)

(println (if true
		     1
		     0))
(println (if false
		     1
		     0))
(var c true)
(println (if c
		     true
		     false))
(println (if (not c)
		     true
		     false))
(println "")
(println (when true
		   1))
(println (when false
		   1))
(var c true)
(println (when c
		   true))
(println (when (not c)
		   true))
(println "")
(println (unless true
		   0))
(println (unless false
		   0))
(var c true)
(println (unless c
		   false))
(println (unless (not c)
           true
		   false))
